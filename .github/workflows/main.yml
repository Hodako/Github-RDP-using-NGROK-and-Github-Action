name: Run Windows RDP Server with Ngrok

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Download and Install Ngrok
      run: |
        Invoke-WebRequest -Uri "https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip" -OutFile ngrok.zip
        Expand-Archive -Path ngrok.zip -DestinationPath .

    - name: Configure Ngrok
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        .\ngrok authtoken $env:NGROK_AUTH_TOKEN

    - name: Start Ngrok Tunnel
      run: |
        Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389" -WindowStyle Hidden

    - name: Get Public URL
      run: |
        Start-Sleep -Seconds 5  # Wait for ngrok to start
        $tunnels = Invoke-RestMethod -Uri "http://localhost:4040/api/tunnels"
        $url = $tunnels.tunnels[0].public_url
        Write-Host "RDP Server URL: $url"
        Write-Host "Username: runneradmin"
        $password = [System.Web.Security.Membership]::GeneratePassword(16,3)
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $password -Force)
        Write-Host "Password: $password"

    - name: Keep Action Running
      run: |
        while ($true) { 
          Write-Host "Keep alive..."
          Start-Sleep -Seconds 300
        }
